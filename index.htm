<!-- <!DOCTYPE html> -->
<html lang="en-us">
    <head>
        <meta http-equiv='Content-Type' content='text/html; charset=utf-8' />
        <meta name='viewport' content='width=device-width, initial-scale=1'>
        <link href='semantic.vision.css' type='text/css' rel='stylesheet'>
        <title>Mad Advisors Corp</title>
    </head>
    <body>
        <nav id="globalnav" role="navigation">
            <div class="content">
                <div class="list">
                    <div class="item">
                        <a href="http://voxoz.com/">Voxoz</a>
                    </div>
                    <div class="item">
                        <a href="http://synrc.com/">Synrc</a>
                    </div>
                    <div class="item">
                        <a href="http://spawnproc.com">Spawnproc</a>
                    </div>
                    <div class="item">
                        <a href="http://groupoid.space">Goupoid</a>
                    </div>
                </div>
            </div>
        </nav>
        <nav id="localnav" class="sticky" role="navigation">
            <div class="content">
                <div class="list">
                    <h2 class="nav-title">
                        <a href="/">Future Prediction</a>
                    </h2>
                    <div class="menu-tray">
                        <a href="http://semantic.vision">Mad Advisors Corp</a>
                    </div>
                </div>
            </div>
        </nav>
        <div id="main">
            <div class="content">
                <header class="underline">
                    <h1 class="title">Вангуем</h1>
                    <!-- <div class="title-additionally">with Retina display</div> -->
                    <div class="epigraph">
                        &mdash; Я покупаю это за доллар!<br>
                    </div>
                    <div class="note">Робокоп</div>
                    <figure class="overview-hero"></figure>
                </header>
                <section class="section underline">
                    <!-- <div class="hero"></div> -->
                    <h2>Интро</h2>
                    <!-- <h3></h3> -->
                    <div class="list center">
                        <p>
                            Многие люди спрашивают нас, куда инвестировать свое время, что почитать,
                            на какие технологии ориентироваться. Мотивация этой страницы &mdash;
                            это собрание всей информации по тем технологиям, которые мы используем
                            в своей работе и на что ориентируемся лично мы. Пожалуйста отнеситесь к
                            этим перечислениям с пониманием. <br><br>
                        </p>
                        <p>
                            Это опасный документ, если программист или человек будет следовать
                            этим рекомендациям буквально, он может потерять работу, дееспособность,
                            мотивацию, жену. Отнеситесь к чтению с ответственностью. Вы предупреждены.
                            Мы ни за что не отвечаем.
                        </p>
                    </div>
                </section>
                <section class="section underline">
                    <!-- <div class="hero"></div> -->
                    <h2>
                        1. Storage Systems
                    </h2>
                    <!-- <h3>The trackpad, pushed even further.</h3> -->
                    <div class="list center">
                        <p>
                            &mdash; Aerospike (SSD, LuaJIT) <br>
                            &mdash; BlazingDB (GPU) <br>
                            &mdash; PumpkinDB (SPDK, LMDB, FORTH) <br><br>

                            Мы видим так, что современные базы данных должны
                            использовать современные технологии AVX, GPU, OpenCL.
                            Нам кажется это логичным.<br><br>

                            В прошлом были быстрые базы данных, которые использовали
                            mmap (LMDB, MUMPS) и геометрию диска, особенности операционной системы,
                            свой язык управления курсорами. В будущем базы будут напрямую
                            управлять котнроллером SSD диска, как то spdk.io.
                        </p>
                        <p>
                            Системы хранения и базы данных все скучные.
                            Хочется базу данных, которая использует особенности SSD дисков
                            и/или OpenCL для паралельной обработки запросов. Хочется
                            табулярную, а не реляционную или графовую структуру. Табулярные
                            структуры давно используются в построении хранилищ и неплохо
                            скейлятся учитывая особенности различных бекендов.
                            Главный примеры: MUMPS, BigTable, mnesia.
                            Для нас база данных это не черный
                            ящик, а конструктор для построения своих храилищ.
                        </p>
                    </div>
                </section>
                <section class="section underline">
                <!-- <div class="hero"></div> -->
                <h2>
                    2. Array Processing Languages
                </h2>
                <!-- <h3>Torgether they make quicker work of everything.</h3> -->
                <div class="list center">
                    <p>
                         &mdash; Futhark (GPU) <br>
                         &mdash; Julia (AVX) <br>
                         &mdash; AutumnAI (ML) <br><br>

                         Современные математические пакеты должны быть такого уровня,
                         чтобы использовать сразу в продакшине, а не только дата
                         сайнтистами.
                    </p>
                    <p>
                         В прошлом все использовали Fortran, Mathlab, R, TensorFlow
                         и другие инструменты разных классов
                         для извлечения информации из данных и ее процессинга. Мы видим системы будущего,
                         построенные на современных технологиях и не хотим использовать
                         медленные инструменты ориентированные на масс-маркет.
                         Так как многие инструменты были созданы
                         математиками, а не инженерами &mdash; эти вещи не ложатся на продакшин.
                    </p>
                </div>
                </section>
                <section class="section underline">
                <!-- <div class="hero"></div> -->
                <h2>
                    3. Concurrency Runtimes and Languages
                </h2>
                <!-- <h3>Torgether they make quicker work of everything.</h3> -->
                <div class="list center">
                    <p>
                         &mdash; Pony (CAS, Zero-Copy, Lock-free) <br>
                         &mdash; Erlang (Actor, Message passing, Lock-free) <br>
                         &mdash; Rust (Language with Linear Types) <br><br>

                         Первая взрослая система для конкурентного программирования была
                         Ada, другие системы это E, Oz, Erlang. Erlang продержался дольше всех
                         и до сих пор конкурирует с другими популярными рантаймами низкого качества,
                         мультипроцессорными системами, виртуальными машинами и даже
                         операционными системами.

                    </p>
                    <p>
                         Первая попытка популяризировать Compare-and-Swap семантику курсоров
                         и структур данных без копирования была LMAX Disruptor. Pony эксплуатирует
                         эту идею и мы хотим видеть рантаймы которые обладают этими характеристиками.
                         Кроме того, мы являемся авторами такого рантайма. <br><br>

                         Также у нас в активе рантайм предыдущего поколения LING,
                         который совместим с Erlang/OTP и может работать на Xen без
                         использования стека операционной системы.
                    </p>
                </div>
                </section>
                <section class="section underline">
                    <!-- <div class="hero"></div> -->
                    <h2>
                        4. Target Languages
                    </h2>
                    <!-- <h3>The trackpad, pushed even further.</h3> -->
                    <div class="list center">
                        <p>
                            &mdash; OCaml (GC, LLVM)<br>
                            &mdash; LLVM/MIR (Assembler) <br>
                            &mdash; Rust (GC-free, Linear Types) <br>
                            &mdash; D (LLVM) <br>
                            &mdash; GHC (GC, LLVM) <br><br>

                            Несмотря на то, что LLVM является устаревшей технологией,
                            которая является общим знаменателем всех ассемблеров,
                            мы приводим этот список языков, как целевых платформ
                            для наших рантаймов. Попытка избавиться от наследия LLVM
                            была предпринята в проекте Go, но далека от идеала.
                        </p>
                        <p>
                            А пока
                            мы рассматриваем все LLVM системы, вместе с высокоуровневыми
                            языками, которые предоставляют широкий спектр статических
                            гарантий. Мы не можем включить сюда С++ или С, так как
                            гарантии для них могут предоставляться, только если этот код
                            генерируется из моделей, где статические гарантии доказаны.<br<br>

                            Это пока не будущее, но направление в котором нужно двигаться.
                        </p>
                    </div>
                </section>
                <section class="section underline">
                    <!-- <div class="hero"></div> -->
                    <h2>
                        5. Certified Kernels
                    </h2>
                    <!-- <h3>The trackpad, pushed even further.</h3> -->
                    <div class="list center">
                        <p>
                            &mdash; Coq (Tactics, Extraction)<br>
                            &mdash; F* (MLTT Crypto Stack) <br>
                            &mdash; Z3 (External SMT Solver) <br>
                            &mdash; Lean (External MLTT Protocol) <br><br>

                            Системы автоматического доказательства теорем
                            раньше исользовались исключительно математиками,
                            современные тенденции ведут к полностью верифицированым
                            вычислительным средам, которые линкуются с
                            верифицированными рантаймами или рантаймами со статическими гарантиями.<br><br>

                            Мы не конкурируем с такими стеками как functor.se, которые базируются
                            на CompCert, VST и доказательстве C программ. В том числе мы не
                            конкурируем с seL4. Это не тот путь, которым мы хотим пойти.
                        </p>
                        <p>
                            Несмотря на то, что существует много систем с зависимыми типами,
                            такие как Agda, Idris, ACL2, HOL/Isabell, мы ориентируемся на
                            системы с открытыми терм-протоколами (Lean), Coq (как доминирующий
                            язык программирования с зависимыми типами) и внешние SMT солверы.
                            Наша цель &mdash; построить
                            базовую библиотеку и часть рантайма на Coq, а потом создать под нее
                            свой язык и ядро со статическими гарантиями. Это длительный проект
                            который подразумевает взаимодействие с академией.<br><br>

                            Также мы являемся авторами высокопроизводительного трастед кернела ОМ,
                            который может использоваться как ядро с зависимыми типами и виртуальная
                            вычислительная среда для выполнения тотальных корекурсивных программ
                            в управляемых и доверительных окружениях: криптовалютах, финансовых
                            языках и других системах требующих тотальности.
                        </p>
                    </div>
                </section>
            </div>
            <footer>
                <div class="content">
                    <section class="buy-strip underline">
                        <section class="buy-strip-compare list center">
                            <div class="mac-icon"></div>
                            <div>
                                <div class="logo">
                                    <div class="title">Максим</div>
                                    <div class="title-additionally">
                                        Erlang Monk
                                    </div>
                                </div>
                                <div class="compare">
                                    <a href="http://5ht.co">5ht.co</a>
                                </div>
                            </div>
                        </section>

                    </section>
                    <section class="sosumi underline">
                        <ul>
                            <li>Twitter <a href="https://twitter.com/5HT">@5HT</li>
                        </ul>
                    </section>
                    <nav class="breadcrumbs list left">
                        <a href="#" class="home">λ</a>
                        <ol>
                            <li><a href="http://semantic.vision/">Mad Advisors Corp</a></li>
                            <li>Future Prediction</li>
                        </ol>
                    </nav>
                </div>
            </footer>
        </div>
        <script>
            var mn = document.getElementsByClassName('sticky')[0];
            var mns = "sticky-enabled";
            var hdr = document.getElementById('globalnav').offsetHeight;
            window.onscroll = function() {
                if (window.pageYOffset > hdr) { mn.classList.add(mns); }
                else { mn.classList.remove(mns); }
            };
        </script>
    </body>
</html>

